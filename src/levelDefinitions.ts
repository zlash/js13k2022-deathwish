
////////////////////////////////////////////    
// This file is autogenerated! ALL EDITS WILL BE LOST!!    
////////////////////////////////////////////////////////////
import { vec2 } from "./juvec";
import { Level } from "./level";
import { Map } from "./game";
import * as Wish from "./wishes";
import * as MapTiles from "./mapTileConstants";

export const levels: Level[] = [
   {
        neededKeys: 0,
        startPosition: vec2(2, 4),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality],
        
        levelMap: {            
            sz: vec2(12, 10),
            tilesStr: "))))))))))))))))((((((()))))((((((())(((((9999)))(/((()(*(())((((()(((())((((()))(())))(((((((())))(((((((()))))))))))))"
        } as Map
    },
   {
        neededKeys: 1,
        startPosition: vec2(2, 4),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality],
        
        levelMap: {            
            sz: vec2(11, 7),
            tilesStr: ")))))))))))))))99((+())(((9((((())(((*(()))))(/((((((())((((((((())))))))))))"
        } as Map
    },
   {
        neededKeys: 2,
        startPosition: vec2(3, 17),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality],
        
        levelMap: {            
            sz: vec2(7, 20),
            tilesStr: "))))))))99999)))(*())))((()))-----))-----))-----)))((())))((())))((())))(+())))((())))((())))((())))(+())))((())))((())))(/())))((()))))))))"
        } as Map
    },
   {
        neededKeys: 2,
        startPosition: vec2(1, 4),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality],
        
        levelMap: {            
            sz: vec2(13, 9),
            tilesStr: "))))))))))))))((3+3(2()99))((333(2()*())(((((()1)(())/((1(()()--))(((((()()--))(222(()(3(())(2+2(()(3(())))))))))))))"
        } as Map
    },
   {
        neededKeys: 2,
        startPosition: vec2(5, 2),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality,Wish.CanSwim],
        
        levelMap: {            
            sz: vec2(10, 17),
            tilesStr: ")))))))))))...(((..))...(/(..))...(((..))))))))..))((((((..))((((((..))((--))))))((-+))+())((--))..))(((((...))(((((...))(((((...))))--)9))))))--(*()))))-(((())))))))))))"
        } as Map
    },
   {
        neededKeys: 2,
        startPosition: vec2(2, 9),
        housePosition: vec2(6, 5),
        availableWishes: [Wish.Immortality,Wish.CanSwim,Wish.OwnAHouse],
        
        levelMap: {            
            sz: vec2(13, 16),
            tilesStr: "))))))))))))))----999....))---((*(....))-)))(((....))(+()((())))))((()(0()((())))))((()((())((()((()...))((()...)...))(/()---).(())((((((((.+())((((((((.(())...........))...........))...........))))))))))))))"
        } as Map
    },
   {
        neededKeys: 3,
        startPosition: vec2(3, 3),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality,Wish.CanSwim,Wish.GoThroughWalls],
        
        levelMap: {            
            sz: vec2(13, 17),
            tilesStr: "))))))))))))))...((----9-)).((((---))))).(/((--((+()).((((--(((())...((--(((()).+.(((--,,,))...(((((((())..((((((((())..((((((((())....(((....))....(((..(()).9..(((..(+)).*..(((..(())....(((..(())...........))))))))))))))"
        } as Map
    },
   {
        neededKeys: 2,
        startPosition: vec2(8, 2),
        housePosition: vec2(5, 9),
        availableWishes: [Wish.Immortality,Wish.CanSwim,Wish.GoThroughWalls,Wish.OwnAHouse],
        
        levelMap: {            
            sz: vec2(17, 14),
            tilesStr: "))))))))))))))))))999(3((((.()+)())(*((3((/(.(),)())((((3(((()((((())((1(3(1(()(((--))((((3((((.((---))((((3((((.((---))-22)))..)))))))))(((3((((3......))(((30((+3......))(((3((((3...)))))(((333333...)--))............)--))))))))))))))))))"
        } as Map
    },
   {
        neededKeys: 0,
        startPosition: vec2(1, 4),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality,Wish.Liquid,Wish.CanSwim],
        
        levelMap: {            
            sz: vec2(17, 10),
            tilesStr: "))))))))))))))))))))55555555))999)))))))55555..(99))(((--(((((..(*())/((--(((((..((())(((--(((((..((())(((--(((((.....)))))))55555.....))))55555555)))))))))))))))))))))))"
        } as Map
    },
   {
        neededKeys: 1,
        startPosition: vec2(1, 6),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality,Wish.Liquid],
        
        levelMap: {            
            sz: vec2(18, 17),
            tilesStr: ")))))))))))))))))))--((555555555555))--((((((((((5((())--((((((((((5(--))))))99))))((5((-))5555555(((((55(())/((((((((((((555))(((((((((((((((()))))9999))))((((()))999+(9---)(()(())99))(()))))(()(())8((5(1((7(((()(())))))))))))))))(())9999(333((33(((())((*((333((33(((())(((((333((33(((()))))))))))))))))))"
        } as Map
    },
   {
        neededKeys: 0,
        startPosition: vec2(1, 4),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality,Wish.Liquid],
        
        levelMap: {            
            sz: vec2(11, 11),
            tilesStr: "))))))))))))))))))999))6666)4444)))))))4444))/((((((44))(((((((44))))66)9999))))66))(*())((((((((())((((((((())))))))))))"
        } as Map
    },
   {
        neededKeys: 2,
        startPosition: vec2(1, 1),
        housePosition: vec2(-1, -1),
        availableWishes: [Wish.Immortality,Wish.Liquid,Wish.CanSwim],
        
        levelMap: {            
            sz: vec2(17, 14),
            tilesStr: "))))))))))))))))))/(((44...666(+())((((44...666((())(((((4...666666))44(((4...((6666))444((.....((((())((4((.999.((((())+(4((.(*(.((()5))((4((.(((.((()5))444((.....((()6)))))(((...((()))))--)((((((((()--))--)((((((((()--))))))))))))))))))"
        } as Map
    },
   {
        neededKeys: 0,
        startPosition: vec2(7, 49),
        housePosition: vec2(4, 2),
        availableWishes: [Wish.Immortality,Wish.Liquid,Wish.CanSwim,Wish.OwnAHouse],
        
        levelMap: {            
            sz: vec2(15, 52),
            tilesStr: "))))))))))))))))666(666666666))..(0((((((((-))..((((((((((-))..((((((((((-))-----(((((((-))999999999(((-))999999999(((-))999999999(((-))9))--999933)9))9)((-4=4-(()9))9)((-444-(()9))9)(((---((()9))9)(((:;<((()9))4)(((:;<((()4))4)(((:;<((()4))4)(((:;<((()4))-)(((:;<((()-))-)(((:;<((()-))-))((:;<(())-))--)((:;<(()--))9-))(:;<())-9))99-)(:;<()-99))99-)(:;<()-99))99-)(:;<()-99))99-)(:;<()-99))99-)(:;<()-99))---)(:;<()---))-)))(:;<()))-))-)(((:;<((()-))-)(((:;<((()-))-)22)))))22)-))-)22)444)22)-))-)(()494)(()-))-)1()444)(1)-))-)(()))))(()-))-)(((999((()-))-)((((*(((()-))-)((((((((()-))-)((((((((()-))9)))33333)))9))999)33333)999))999)((((()999))999)((((()999))999)((1(()999))999)((((()999))999)((((()999))999)((((()999))999)((((()999))999)((/(()999))999)((((()999))))))))))))))))"
        } as Map
    }
];
    
